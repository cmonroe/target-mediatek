--- a/arch/arm64/boot/dts/mediatek/mt7622-rfb1.dts
+++ b/arch/arm64/boot/dts/mediatek/mt7622-rfb1.dts
@@ -36,7 +36,7 @@
 			sram-supply = <&mt6380_vm_reg>;
 		};
 	};
-
+    /*
 	gpio-keys {
 		compatible = "gpio-keys";
 
@@ -52,6 +52,7 @@
 			gpios = <&pio 102 GPIO_ACTIVE_LOW>;
 		};
 	};
+    */
 
 	memory {
 		reg = <0 0x40000000 0 0x40000000>;
@@ -82,6 +83,19 @@
 		regulator-boot-on;
 		regulator-always-on;
 	};
+
+    sound: sound {
+        compatible = "mediatek,mt2701-wm8960-machine";
+        mediatek,platform = <&afe>;
+        audio-routing =
+                "Headphone", "HP_L",
+                "Headphone", "HP_R",
+                "LINPUT2", "AMIC",
+                "RINPUT2", "AMIC";
+        mediatek,audio-codec = <&wm8960>;
+        pinctrl-names = "default";
+        pinctrl-0 = <&i2s1_pins>;
+    };
 };
 
 &bch {
@@ -175,6 +189,10 @@
 	pinctrl-names = "default";
 	pinctrl-0 = <&i2c1_pins>;
 	status = "okay";
+    wm8960: wm8960@1a {
+        compatible = "wlf,wm8960";
+        reg = <0x1a>;
+    };
 };
 
 &i2c2 {
@@ -464,7 +482,7 @@
 	spic1_pins: spic1-pins {
 		mux {
 			function = "spi";
-			groups = "spic1_0";
+			groups = "spic1_1";
 		};
 	};
 
@@ -607,6 +625,11 @@
 	pinctrl-names = "default";
 	pinctrl-0 = <&spic1_pins>;
 	status = "okay";
+    slic: slic@0 {
+        compatible = "siliconlab,slic";
+        reg = <0>;
+        spi-max-frequency = <2000000>;
+    };
 };
 
 &ssusb {
--- a/drivers/spi/spidev.c
+++ b/drivers/spi/spidev.c
@@ -696,7 +696,7 @@ static const struct of_device_id spidev_
 	{ .compatible = "menlo,m53cpld" },
 	{ .compatible = "cisco,spi-petra" },
 	{ .compatible = "micron,spi-authenta" },
-	{ .compatible = "siliconlabs,si3210" },
+	{ .compatible = "siliconlabs,slic" },
 	{},
 };
 MODULE_DEVICE_TABLE(of, spidev_dt_ids);
--- a/sound/soc/codecs/wm8960.c
+++ b/sound/soc/codecs/wm8960.c
@@ -1428,11 +1428,14 @@ static int wm8960_i2c_probe(struct i2c_c
 	else if (i2c->dev.of_node)
 		wm8960_set_pdata_from_of(i2c, &wm8960->pdata);
 
+    /* D2 MOD: Remove below code due to no real wm8960 codec in the EVB board */
+#if 0
 	ret = wm8960_reset(wm8960->regmap);
 	if (ret != 0) {
 		dev_err(&i2c->dev, "Failed to issue reset\n");
 		return ret;
 	}
+#endif
 
 	if (wm8960->pdata.shared_lrclk) {
 		ret = regmap_update_bits(wm8960->regmap, WM8960_ADDCTL2,
--- a/sound/soc/mediatek/mt2701/mt2701-afe-pcm.c
+++ b/sound/soc/mediatek/mt2701/mt2701-afe-pcm.c
@@ -26,11 +26,11 @@ static const struct snd_pcm_hardware mt2
 		| SNDRV_PCM_INFO_RESUME | SNDRV_PCM_INFO_MMAP_VALID,
 	.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE
 		   | SNDRV_PCM_FMTBIT_S32_LE,
-	.period_bytes_min = 1024,
-	.period_bytes_max = 1024 * 256,
-	.periods_min = 4,
+	.period_bytes_min = 320,
+	.period_bytes_max = 320 * 256,
+	.periods_min = 2,
 	.periods_max = 1024,
-	.buffer_bytes_max = 1024 * 1024,
+	.buffer_bytes_max = 320 * 1024,
 	.fifo_size = 0,
 };
 
@@ -242,8 +242,10 @@ static int mt2701_afe_i2s_prepare(struct
 
 	i2s_path = &afe_priv->i2s_path[i2s_num];
 
+#if 1 /* D2 MOD, do not return -EBUSY even if the sream is occupied, or snd_pcm_recover() will failed. */
 	if (i2s_path->occupied[substream->stream])
-		return -EBUSY;
+		return 0;
+#endif
 
 	ret = mt2701_mclk_configuration(afe, mode ? 1 : i2s_num);
 	if (ret)
