From: Chad Monroe <chad@monroe.io>
Date: Thu, 27 Apr 2023 16:45:33 -0700
Subject: [PATCH] net: phy: mxl: add OF config

mxl,sgmii-fixed: set SGMII fixed mode
mxl,led-drive-vdd: leds are driven by VDDs

Signed-off-by: Chad Monroe <chad@monroe.io>
---
 drivers/net/phy/mxl-gpy.c |   36 +++++++++++++++++++++++++++++++++++-
 1 file changed, 35 insertions(+), 1 deletion(-)

--- a/drivers/net/phy/mxl-gpy.c
+++ b/drivers/net/phy/mxl-gpy.c
@@ -70,6 +70,7 @@
 #define VSPEC1_SGMII_CTRL_ANRS	BIT(9)		/* Restart Aneg */
 #define VSPEC1_SGMII_ANEN_ANRS	(VSPEC1_SGMII_CTRL_ANEN | \
 				 VSPEC1_SGMII_CTRL_ANRS)
+#define VSPEC1_SGMII_CTRL_FIXED_2G5	BIT(5)	/* Fixed SGMII speed */
 
 /* WoL */
 #define VPSPEC2_WOL_CTL		0x0E06
@@ -116,6 +117,34 @@ static int gpy_led_write(struct phy_devi
 	return 0;
 }
 
+static int gpy_of_init(struct phy_device *phydev)
+{
+	int ret = 0;
+	struct device_node *node = phydev->mdio.dev.of_node;
+
+	if (!node) {
+		phydev_info(phydev, "failed to get node, ignoring OF config\n");
+		return 0;
+	}
+
+	if (of_property_read_bool(node, "mxl,sgmii-fixed")) {
+		ret = phy_set_bits_mmd(phydev, MDIO_MMD_VEND1, VSPEC1_SGMII_CTRL,
+				VSPEC1_SGMII_CTRL_FIXED_2G5);
+
+		if (ret < 0)
+			return ret;
+	}
+
+	if (of_property_read_bool(node, "mxl,led-drive-vdd")) {
+		ret = phy_write(phydev, PHY_LED, 0x0f00);
+
+		if (ret < 0)
+			return ret;
+	}
+
+	return 0;
+}
+
 static int gpy_config_init(struct phy_device *phydev)
 {
 	int ret;
@@ -130,7 +159,11 @@ static int gpy_config_init(struct phy_de
 	if (ret < 0)
 		return ret;
 
-	return gpy_led_write(phydev);
+	ret = gpy_led_write(phydev);
+	if (ret < 0)
+		return ret;
+
+	return gpy_of_init(phydev);
 }
 
 static int gpy_probe(struct phy_device *phydev)
