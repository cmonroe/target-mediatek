From 0033341d3ff6d89f5007c29e95e0d95398a8dd52 Mon Sep 17 00:00:00 2001
From: Tim Hayes <tim.hayes@smartrg.com>
Date: Thu, 5 Nov 2020 08:15:37 -0800
Subject: [PATCH] OWRT-5171 pr_debug and gre tunnel learn mode change

---
 drivers/net/dsa/mt7530.c | 43 +++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 41 insertions(+), 2 deletions(-)

--- a/drivers/net/dsa/mt7530.c
+++ b/drivers/net/dsa/mt7530.c
@@ -931,6 +931,25 @@ mt7530_mib_fetch_port_stat(struct mt7530
 	}
 }
 
+/* we have a problem seeing common mac addresses when bridging from LAN to WAN */
+void
+mt7530_set_gre_mode(struct mt7530_priv *priv)
+{
+	int port=0; /* wan port */
+	static int set=0;
+
+	if (set==0) {
+		set=1;
+		/* GRE tunnel mode don't learn on wan port */
+		mt7530_set(priv, MT7530_PSC_P(port),SA_DIS);
+		pr_err("%s DSA PSC wan learn disable \n",__FUNCTION__);
+		/* Unknown unicast frame forwarding to the cpu port */
+		mt7530_set(priv, MT7530_MFC,UNU_FFP(BIT(MT7530_CPU_PORT)));
+		pr_err("%s DSA CPU UUC set\n",__FUNCTION__);
+	}
+}
+
+
 static void
 mt7530_mib_work_func(struct work_struct *work)
 {
@@ -1185,7 +1204,11 @@ mt7530_port_bridge_join(struct dsa_switc
 	priv->ports[port].pm |= PCR_MATRIX(port_bitmap);
 
 	mutex_unlock(&priv->reg_mutex);
+	pr_debug("%s DSA bridge %s port %d port_bitmap 0x%x 0x%x\n",__FUNCTION__,bridge->name,port,port_bitmap,priv->ports[port].pm);
 
+	// if ( strstr(bridge->name,"tun") ) {
+	// 	mt7530_set_gre_mode(priv);
+	// }
 	return 0;
 }
 
@@ -1293,6 +1316,7 @@ mt7530_port_bridge_leave(struct dsa_swit
 	priv->ports[port].pm = PCR_MATRIX(BIT(MT7530_CPU_PORT));
 
 	mutex_unlock(&priv->reg_mutex);
+	pr_debug("%s DSA bridge %s port %d port_bitmap 0x%x\n",__FUNCTION__,bridge->name,port,priv->ports[port].pm);
 }
 
 static int
@@ -1346,6 +1370,17 @@ mt7530_port_fdb_dump(struct dsa_switch *
 	do {
 		if (rsp & ATC_SRCH_HIT) {
 			mt7530_fdb_read(priv, &_fdb);
+
+			if(_fdb.port_mask & BIT(MT7530_CPU_PORT)) {
+				pr_debug("%s DSA CPU port %d mask 0x%x vid %d age %d %02x:%02x:%02x:%02x:%02x:%02x\n",__FUNCTION__,
+					MT7530_CPU_PORT,_fdb.port_mask,_fdb.vid,_fdb.aging,
+					_fdb.mac[0],
+					_fdb.mac[1],
+					_fdb.mac[2],
+					_fdb.mac[3],
+					_fdb.mac[4],
+					_fdb.mac[5]);
+		}
 			if (_fdb.port_mask & BIT(port)) {
 				ret = cb(_fdb.mac, _fdb.vid, _fdb.noarp,
 					 data);
@@ -1514,6 +1549,7 @@ mt7530_port_vlan_add(struct dsa_switch *
 	struct mt7530_priv *priv = ds->priv;
 	u16 vid;
 
+	pr_debug("%s:%d DSA port %d vlan %d %d pvid %d untagged %d \n",__FUNCTION__,__LINE__,port,vlan->vid_begin,vlan->vid_end,pvid,untagged);
 	mutex_lock(&priv->reg_mutex);
 
 	for (vid = vlan->vid_begin; vid <= vlan->vid_end; ++vid) {
@@ -1539,6 +1575,7 @@ mt7530_port_vlan_del(struct dsa_switch *
 	struct mt7530_priv *priv = ds->priv;
 	u16 vid, pvid;
 
+	pr_debug("%s:%d DSA port %d vlan %d %d flags 0x%x \n",__FUNCTION__,__LINE__,port,vlan->vid_begin,vlan->vid_end,vlan->flags);
 	mutex_lock(&priv->reg_mutex);
 
 	pvid = priv->ports[port].pvid;
@@ -1736,9 +1773,10 @@ mt7530_setup(struct dsa_switch *ds)
 		mt7530_rmw(priv, MT7530_PCR_P(i), PCR_MATRIX_MASK,
 			   PCR_MATRIX_CLR);
 
-		if (dsa_is_cpu_port(ds, i))
+
+		if (dsa_is_cpu_port(ds, i)) 
 			mt753x_cpu_port_enable(ds, i);
-		else
+		else 
 			mt7530_port_disable(ds, i);
 
 		/* Enable consistent egress tag */
@@ -1891,6 +1929,7 @@ mt7531_setup(struct dsa_switch *ds)
 		/* Enable consistent egress tag */
 		mt7530_rmw(priv, MT7530_PVC_P(i), PVC_EG_TAG_MASK,
 			   PVC_EG_TAG(MT7530_VLAN_EG_CONSISTENT));
+
 	}
 
 	ds->configure_vlan_while_not_filtering = true;
