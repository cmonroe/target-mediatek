--- a/sound/soc/mediatek/mt7986/mt7986-si3218x.c
+++ b/sound/soc/mediatek/mt7986/mt7986-si3218x.c
@@ -103,7 +103,7 @@ static int mt7986_si3218x_init(struct sn
 	/* set ETDM_IN5_CON2 */
 	regmap_update_bits(afe->regmap, ETDM_IN5_CON2, IN_CLK_SRC_MASK,
 			   IN_CLK_SRC(APLL_CLK));
-
+#if 0 //D2 MOD
 	/* set ETDM_IN5_CON3 */
 	regmap_update_bits(afe->regmap, ETDM_IN5_CON3, IN_SEL_FS_MASK,
 			   IN_SEL_FS(ETDM_FS_16K));
@@ -113,7 +113,17 @@ static int mt7986_si3218x_init(struct sn
 			   IN_CLK_INV);
 	regmap_update_bits(afe->regmap, ETDM_IN5_CON4, IN_RELATCH_MASK,
 			   IN_RELATCH(AFE_FS_16K));
+#else
+	/* set ETDM_IN5_CON3 */
+	regmap_update_bits(afe->regmap, ETDM_IN5_CON3, IN_SEL_FS_MASK,
+			   IN_SEL_FS(ETDM_FS_8K));
 
+	/* set ETDM_IN5_CON4 */
+	regmap_update_bits(afe->regmap, ETDM_IN5_CON4, IN_CLK_INV_MASK,
+			   IN_CLK_INV);
+	regmap_update_bits(afe->regmap, ETDM_IN5_CON4, IN_RELATCH_MASK,
+			   IN_RELATCH(AFE_FS_8K));
+#endif
 	/* set ETDM_OUT5_CON0 */
 	regmap_update_bits(afe->regmap, ETDM_OUT5_CON0, ETDM_FMT_MASK,
 			   FIELD_PREP(ETDM_FMT_MASK, PCMA));
@@ -125,7 +135,7 @@ static int mt7986_si3218x_init(struct sn
 			   FIELD_PREP(ETDM_CH_NUM_MASK, 4 - 1));
 	regmap_update_bits(afe->regmap, ETDM_OUT5_CON0, RELATCH_SRC_MASK,
 			   FIELD_PREP(RELATCH_SRC_MASK, APLL_CLK));
-
+#if 0 //D2 MOD
 	/* set ETDM_OUT5_CON4 */
 	regmap_update_bits(afe->regmap, ETDM_OUT5_CON4, OUT_SEL_FS_MASK,
 			   OUT_SEL_FS(ETDM_FS_16K));
@@ -133,17 +143,26 @@ static int mt7986_si3218x_init(struct sn
 			   OUT_CLK_SRC(APLL_CLK));
 	regmap_update_bits(afe->regmap, ETDM_OUT5_CON4, OUT_RELATCH_MASK,
 			   OUT_RELATCH(AFE_FS_16K));
-
+#else
+	/* set ETDM_OUT5_CON4 */
+	regmap_update_bits(afe->regmap, ETDM_OUT5_CON4, OUT_SEL_FS_MASK,
+			   OUT_SEL_FS(ETDM_FS_8K));
+	regmap_update_bits(afe->regmap, ETDM_OUT5_CON4, OUT_CLK_SRC_MASK,
+			   OUT_CLK_SRC(APLL_CLK));
+	regmap_update_bits(afe->regmap, ETDM_OUT5_CON4, OUT_RELATCH_MASK,
+			   OUT_RELATCH(AFE_FS_8K));
+#endif
 	/* set ETDM_OUT5_CON5 */
 	regmap_update_bits(afe->regmap, ETDM_OUT5_CON5, OUT_CLK_INV_MASK,
 			   OUT_CLK_INV);
+#if 0 //D2 MOD
 	regmap_update_bits(afe->regmap, ETDM_OUT5_CON5, ETDM_CLK_DIV_MASK,
 			   ETDM_CLK_DIV);
 
 	/* set external loopback */
 	regmap_update_bits(afe->regmap, ETDM_4_7_COWORK_CON0, OUT_SEL_MASK,
 			   OUT_SEL(ETDM_IN5));
-
+#endif
 	/* enable ETDM */
 	regmap_update_bits(afe->regmap, ETDM_IN5_CON0, ETDM_EN_MASK,
 			   ETDM_EN);
@@ -165,7 +184,7 @@ SND_SOC_DAILINK_DEFS(capture,
 
 SND_SOC_DAILINK_DEFS(codec,
 	DAILINK_COMP_ARRAY(COMP_CPU("ETDM")),
-	DAILINK_COMP_ARRAY(COMP_CODEC(NULL, "proslic_spi-aif")),
+	DAILINK_COMP_ARRAY(COMP_CODEC(NULL, "slic-dummy-aif")),
 	DAILINK_COMP_ARRAY(COMP_EMPTY()));
 
 static struct snd_soc_dai_link mt7986_si3218x_dai_links[] = {
