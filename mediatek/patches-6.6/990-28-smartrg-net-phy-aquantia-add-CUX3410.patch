From: Chad Monroe <chad@monroe.io>
Date: Fri, 11 Oct 2024 16:41:37 -0700
Subject: [PATCH] net: phy: aquantia: add support for CUX3410

Add support for Marvell CUX3410. This PHY is nearly identical to
the AQR113C but without MACsec, SyncE and PTP support.

Signed-off-by: Chad Monroe <chad@monroe.io>
---
 drivers/net/phy/aquantia/aquantia_main.c |   42 +++++++++++++++++++++
 1 file changed, 42 insertions(+)

--- a/drivers/net/phy/aquantia/aquantia_main.c
+++ b/drivers/net/phy/aquantia/aquantia_main.c
@@ -34,6 +34,7 @@
 #define PHY_ID_AQR813	0x31c31cb2
 #define PHY_ID_AQR112C	0x03a1b790
 #define PHY_ID_AQR112R	0x31c31d12
+#define PHY_ID_CUX3410	0x31c31dd3
 
 #define MDIO_PHYXS_VEND_IF_STATUS		0xe812
 #define MDIO_PHYXS_VEND_IF_STATUS_TYPE_MASK	GENMASK(7, 3)
@@ -46,6 +47,9 @@
 #define MDIO_PHYXS_VEND_IF_STATUS_TYPE_RXAUI	7
 #define MDIO_PHYXS_VEND_IF_STATUS_TYPE_OCSGMII	10
 
+#define MDIO_PHYXS_TX_RSVD_VEND_PROV2           0xc441
+#define MDIO_PHYXS_TX_RSVD_VEND_PROV2_ANEG      BIT(3)
+
 #define MDIO_AN_VEND_PROV			0xc400
 #define MDIO_AN_VEND_PROV_1000BASET_FULL	BIT(15)
 #define MDIO_AN_VEND_PROV_1000BASET_HALF	BIT(14)
@@ -179,6 +183,16 @@ static void aqr107_get_stats(struct phy_
 	}
 }
 
+int aqr107_config_usx_aneg_en(struct phy_device *phydev)
+{
+	u16 val;
+
+	val = phy_read_mmd(phydev, MDIO_MMD_PHYXS, MDIO_PHYXS_TX_RSVD_VEND_PROV2);
+	val |= MDIO_PHYXS_TX_RSVD_VEND_PROV2_ANEG;
+
+	return phy_write_mmd(phydev, MDIO_MMD_PHYXS, MDIO_PHYXS_TX_RSVD_VEND_PROV2, val);
+}
+
 static int aqr_config_aneg(struct phy_device *phydev)
 {
 	bool changed = false;
@@ -662,6 +676,10 @@ static int aqr107_config_init(struct phy
 	if (ret)
 		return ret;
 
+	ret = aqr107_config_usx_aneg_en(phydev);
+	if (ret)
+		phydev_err(phydev, "USX autonegotiation disabled, ret: %d\n", ret);
+
 	ret = aqr107_config_mdi(phydev);
 	if (ret)
 		return ret;
@@ -1113,6 +1131,29 @@ static struct phy_driver aqr_driver[] =
 	.get_strings	= aqr107_get_strings,
 	.get_stats	= aqr107_get_stats,
 },
+{
+	PHY_ID_MATCH_MODEL(PHY_ID_CUX3410),
+	.name           = "Aquantia CUX3410",
+	.probe          = aqr107_probe,
+	.config_init    = aqr107_config_init,
+	.config_aneg    = aqr_config_aneg,
+	.config_intr    = aqr_config_intr,
+	.handle_interrupt       = aqr_handle_interrupt,
+	.read_status    = aqr107_read_status,
+	.get_tunable    = aqr107_get_tunable,
+	.set_tunable    = aqr107_set_tunable,
+	.suspend        = aqr107_suspend,
+	.resume         = aqr107_resume,
+	.get_sset_count = aqr107_get_sset_count,
+	.get_strings    = aqr107_get_strings,
+	.get_stats      = aqr107_get_stats,
+	.link_change_notify = aqr107_link_change_notify,
+	//.led_brightness_set = aqr_phy_led_brightness_set,
+	//.led_hw_is_supported = aqr_phy_led_hw_is_supported,
+	//.led_hw_control_set = aqr_phy_led_hw_control_set,
+	//.led_hw_control_get = aqr_phy_led_hw_control_get,
+	.led_polarity_set = aqr_phy_led_polarity_set,
+},
 };
 
 module_phy_driver(aqr_driver);
@@ -1135,6 +1176,7 @@ static struct mdio_device_id __maybe_unu
 	{ PHY_ID_MATCH_MODEL(PHY_ID_AQR813) },
 	{ PHY_ID_MATCH_MODEL(PHY_ID_AQR112C) },
 	{ PHY_ID_MATCH_MODEL(PHY_ID_AQR112R) },
+	{ PHY_ID_MATCH_MODEL(PHY_ID_CUX3410) },
 	{ }
 };
 
